import pandas as pd
from pandas import DataFrame
alldata=pd.read_csv('USER_HOME/tmp/stockholm_export/pydata_export.csv')
alldata.columns=['Name', 'Symbol', 'Adj_Close', 'Close', 'Date','High', 'Low', 'Open', 'symbol', 'Volume']
ss1=alldata[alldata.Symbol=='000001.SS']
prc=ss1.Adj_Close
ss1['pct_change']=prc.pct_change()
ss1['v_change']=ss1.Volume.pct_change()
prc=df.Close
df['p_change']=prc.pct_change()
v=df.Volume
df['v_change']=v.pct_change()
df.loc[(df.v_change>0) & (df.p_change>0), 'mark']=2
df.loc[(df.v_change<0) & (df.p_change>0), 'mark']=1
df.loc[(df.v_change<0) & (df.p_change<0), 'mark']=-1
df.loc[(df.v_change>0) & (df.p_change<0), 'mark']=-2
import numpy as np
df['ma5']=prc.rolling(5).mean()mZ





df['ma10']=prc.rolling(10).mean()
df['ma20']=prc.rolling(20).mean()
df['ma51']=prc.rolling(51).mean

from dateutil.parser import parse
def update_offset(pre_end,new_start):
    p=parse(pre_end).date()
    n=parse(new_start).date()
    return (p-n).days

    begin=parse(newDate).date()
    start=(begin-timedelta(offset)).strftime('%Y-%m-%d')

def group_update(df,start):
    df.set_index('Date',inplace=True)
    orig=df['v_change'][start]
    df['v_change'][start:]=df['Volume'][start:].pct_change()
    df['v_change'][start]=orig
    orig=df['p_change'][start]
    df['p_change'][start:]=df['Close'][start:].pct_change()
    df['p_change'][start]=orig
    return df

def group_cal(df):
    df.set_index('Date',inplace=True)
    df['v_change']=df['Volume'].pct_change()
    df['p_change']=df['Close'].pct_change()
    mark_single_quote(df)
    df['ma51']=df['Close'].rolling(51).mean()
    df['v6']=df['Volume'].rolling(6).mean()
    return df

def group_process():
    d1=pd.DataFrame.from_csv('data.csv')
    q=pd.DataFrame.from_csv('crawl.csv')
    d1.drop(['Unnamed: 0.1','Unnamed: 0.1.1','index'],axis=1,inplace=True)
    date=pd.concat((d1,q),ignore_index=True)
    data.Date=pd.to_datetime(data.Date)
    tmp=data.groupby('Symbol').apply(group_cal)
    tmp.reset_index(inplace=True)


from datetime import date,datetime
from datetime import timedelta

def group_update(df,newDate):
    start=newDate-timedelta(1)
    df['v_change'][start:]=df['Volume'][start:].pct_change()
    df['p_change'][start:]=df['Close'][start:].pct_change()
    
from dateutil.parser impory parse
from dateutil.parser import parse
parse('2016-12-09').date()
date1=_
date2=parse('2016-11-30').date()
date1-date2
(date1-date2).days
    

def group_update(df,newDate,offset):
        df.set_index('Date',inplace=True)
        begin=parse(newDate).date()
        start=begin-timedelta(offset)
        df['v_change'][start:]=df['Volume'][start:].pct_change()
        df['p_change'][start:]=df['Close'][start:].pct_change()
    
